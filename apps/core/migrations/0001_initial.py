# Generated by Django 4.0.5 on 2022-09-04 00:21

import apps.core.utils
import apps.core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), apps.core.validators.MaxFileSizeValidator(kilobytes=1000)], verbose_name='Profile image')),
                ('profile_image_webp', models.ImageField(blank=True, editable=False, help_text='Auto-generated WEBP version of [Profile image]', null=True, upload_to=apps.core.utils.upload_cms_image_location, verbose_name='Profile image (Webp)')),
                ('body', models.TextField(verbose_name='Profile body')),
                ('activate_stack', models.BooleanField(default=True, verbose_name='Activate stack section')),
                ('activate_trust_me', models.BooleanField(default=True, verbose_name='Activate trust me section')),
                ('activate_resume', models.BooleanField(default=True, verbose_name='Activate resume section')),
            ],
            options={
                'verbose_name': 'CMS - About',
            },
        ),
        migrations.CreateModel(
            name='Base',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('email', models.EmailField(help_text='Contact email', max_length=255, verbose_name='Email')),
                ('brand', models.CharField(help_text='Name of your personal brand', max_length=255, verbose_name='Brand')),
                ('logo', models.FileField(help_text='Logo of your personal brand. Allow image files (JPG, PNG, GIF, WEBP) + SVG files', upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg']), apps.core.validators.MaxFileSizeValidator(kilobytes=100), apps.core.validators.validate_image_logo], verbose_name='Logo')),
                ('favicon', models.ImageField(help_text='Favicon of the website', upload_to=apps.core.utils.upload_cms_image_location, validators=[apps.core.validators.MaxFileSizeValidator(kilobytes=10)], verbose_name='favicon')),
                ('github', models.URLField(help_text='Example: https://github.com/dev-user', verbose_name='Github profile url')),
                ('linkedin', models.URLField(help_text='Example: https://www.linkedin.com/in/dev-user', verbose_name='Linkedin profile url')),
            ],
            options={
                'verbose_name': 'CMS - Base',
                'verbose_name_plural': 'CMS - Base',
            },
        ),
        migrations.CreateModel(
            name='ContactRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Contact record',
                'verbose_name_plural': 'Contact records',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('card_title', models.TextField(blank=True, verbose_name='Card title')),
                ('card_body', models.TextField(blank=True, verbose_name='Card Body')),
                ('dev_photo', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), apps.core.validators.MaxFileSizeValidator(kilobytes=1000)], verbose_name='Developer photo')),
                ('dev_photo_webp', models.ImageField(blank=True, editable=False, help_text='Auto-generated WEBP version of [Developer photo]', null=True, upload_to=apps.core.utils.upload_cms_image_location, verbose_name='Developer photo (Webp)')),
            ],
            options={
                'verbose_name': 'CMS - Home',
                'verbose_name_plural': 'CMS - Home',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Title')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), apps.core.validators.MaxFileSizeValidator(kilobytes=1000)], verbose_name='Cover image')),
                ('cover_image_webp', models.ImageField(blank=True, editable=False, help_text='Auto-generated WEBP version of [Cover image]', null=True, upload_to=apps.core.utils.upload_cms_image_location, verbose_name='Cover image (Webp)')),
                ('description', models.TextField(help_text='Project summary to display in project list', verbose_name='Description')),
                ('slug', models.SlugField(blank=True, help_text='Url endpoint of this project, leave blank to auto-generate', max_length=255, unique=True, verbose_name='Slug')),
                ('detail', tinymce.models.HTMLField(help_text='Long description about the project, it is the content of the project endpoint', verbose_name='Project details')),
                ('priority_order', models.PositiveSmallIntegerField(default=0, help_text='Positive number used to order, the highest number is positioned first.', verbose_name='Priority order')),
            ],
            options={
                'verbose_name': 'CMS - Project',
                'verbose_name_plural': 'CMS - Projects',
                'ordering': ['-priority_order'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
                ('logo', models.FileField(help_text='Allow image files (JPG, PNG, GIF, WEBP) + SVG files', upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg']), apps.core.validators.MaxFileSizeValidator(kilobytes=100)], verbose_name='Logo')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('priority_order', models.PositiveSmallIntegerField(default=0, help_text='Positive number used to order, the highest number is positioned first.', verbose_name='Priority order')),
                ('about', models.ManyToManyField(blank=True, to='core.about')),
                ('project', models.ManyToManyField(blank=True, to='core.project')),
            ],
            options={
                'verbose_name': 'CMS - Technology',
                'verbose_name_plural': 'CMS - Technologies',
                'ordering': ['-priority_order'],
            },
        ),
        migrations.CreateModel(
            name='ResumeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('company', models.CharField(max_length=255, verbose_name='Company or institution')),
                ('start', models.DateField(verbose_name='Start date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.CharField(choices=[('Experience', 'Experience'), ('Education', 'Education')], default='Experience', max_length=10, verbose_name='Type of entry')),
                ('about', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.about')),
            ],
            options={
                'verbose_name': 'Resume entry',
                'verbose_name_plural': 'Resume entries',
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified on')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('logo', models.FileField(help_text='Allow image files (JPG, PNG, GIF, WEBP) + SVG files', upload_to=apps.core.utils.upload_cms_image_location, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg']), apps.core.validators.MaxFileSizeValidator(kilobytes=100), apps.core.validators.validate_image_logo], verbose_name='Logo')),
                ('priority_order', models.PositiveSmallIntegerField(default=0, help_text='Positive number used to order, the highest number is positioned first.', verbose_name='Priority order')),
                ('about', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.about')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['-priority_order'],
            },
        ),
    ]
